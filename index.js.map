{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '49623840-0f31145568b741aa8d3c39eac';\n\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst defaultParams = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n};\n\nexport function getImagesByQuery(query) {\n  \n  const params = { ...defaultParams, q: query };\n\n  return axios\n    .get('', { params })\n    .then(response => {\n      console.log(response);\n      return response.data;\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      throw error;\n    });\n}\n","export const container = document.querySelector('.gallery');\n\nexport function createGallery(images) {\n  return images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `<li class=\"gallery-item\">\n    <a href=\"${largeImageURL}\" class=\"gallery-item-link\">\n    <img class=\"gallery-item-img\" src=\"${webformatURL}\" alt=\"${tags}\"/>\n    </a>\n    <div class=\"gallery-item-info-wrapper\">\n      <div class=\"gallery-item-info\">\n        <h2 class=\"gallery-item-info-subtitle\">Likes</h2>\n        <p class=\"gallery-item-info-value\">${likes}</p>\n      </div>\n      <div class=\"gallery-item-info\">\n        <h2 class=\"gallery-item-info-subtitle\">Views</h2>\n        <p class=\"gallery-item-info-value\">${views}</p>\n      </div>\n      <div class=\"gallery-item-info\">\n        <h2 class=\"gallery-item-info-subtitle\">Comments</h2>\n        <p class=\"gallery-item-info-value\">${comments}</p>\n      </div>\n      <div class=\"gallery-item-info\">\n        <h2 class=\"gallery-item-info-subtitle\">Downloads</h2>\n        <p class=\"gallery-item-info-value\">${downloads}</p>\n      </div>\n    </div>\n  </li>`\n    )\n    .join('');\n}\n\nexport function clearGallery() {\n  container.innerHTML = '';\n}\n\nconst loader = document.querySelector('.loader');\n\nexport function showLoader() {\n  loader.hidden = false;\n}\n\nexport function hideLoader() {\n  loader.hidden = true;\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { getImagesByQuery } from './js/pixabay-api';\nimport {\n  clearGallery,\n  showLoader,\n  createGallery,\n  hideLoader,\n  container,\n} from './js/render-functions';\n\nconst iconPath = new URL('./img/iconError.svg', import.meta.url).href;\n\nconst form = document.querySelector('.form');\nconsole.dir(form);\n\nform.addEventListener('submit', handleSearch);\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n  enableKeyboard: true,\n  disableScroll: true,\n  fadeSpeed: 400,\n  overlayOpacity: 1,\n});\n\nfunction handleSearch(event) {\n  event.preventDefault();\n\n  clearGallery();\n\n  const query = form.elements['search-text'].value.trim();\n  console.log(query);\n  if (!query) return;\n\n  showLoader();\n\n  getImagesByQuery(query)\n    .then(({ hits }) => {\n      if (hits.length === 0) {\n        iziToast.error({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n          backgroundColor: '#ef4040',\n          messageColor: '#ffffff',\n          maxWidth: '400',\n          iconUrl: iconPath,\n        });\n        hideLoader();\n        return;\n      }\n      container.innerHTML = createGallery(hits);\n\n      lightbox.refresh();\n    })\n    .catch(() => {\n      iziToast.error({\n        title: 'Error',\n        message: 'Something went wrong. Please try again later!',\n        backgroundColor: '#ef4040',\n        messageColor: '#ffffff',\n      });\n    })\n    .finally(() => {\n      hideLoader();\n    });\n  form.reset();\n}\n\n"],"names":["API_KEY","BASE_URL","axios","defaultParams","getImagesByQuery","query","params","response","error","container","createGallery","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","loader","showLoader","hideLoader","iconPath","form","handleSearch","lightbox","SimpleLightbox","event","hits","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCAEVC,EAAW,2BAEjBC,EAAM,SAAS,QAAUD,EAEzB,MAAME,EAAgB,CACpB,IAAKH,EACL,WAAY,QACZ,YAAa,aACb,WAAY,EACd,EAEO,SAASI,EAAiBC,EAAO,CAEtC,MAAMC,EAAS,CAAE,GAAGH,EAAe,EAAGE,CAAK,EAE3C,OAAOH,EACJ,IAAI,GAAI,CAAE,OAAAI,EAAQ,EAClB,KAAKC,IACJ,QAAQ,IAAIA,CAAQ,EACbA,EAAS,KACjB,EACA,MAAMC,GAAS,CACd,cAAQ,MAAM,SAAUA,CAAK,EACvBA,CACZ,CAAK,CACL,CC7BO,MAAMC,EAAY,SAAS,cAAc,UAAU,EAEnD,SAASC,EAAcC,EAAQ,CACpC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA,eACGL,CAAa;AAAA,yCACaD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKtBC,CAAK;AAAA;AAAA;AAAA;AAAA,6CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,6CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,6CAIRC,CAAS;AAAA;AAAA;AAAA,QAIjD,EACA,KAAK,EAAE,CACZ,CAEO,SAASC,GAAe,CAC7BV,EAAU,UAAY,EACxB,CAEA,MAAMW,EAAS,SAAS,cAAc,SAAS,EAExC,SAASC,GAAa,CAC3BD,EAAO,OAAS,EAClB,CAEO,SAASE,GAAa,CAC3BF,EAAO,OAAS,EAClB,CCtCA,MAAMG,EAAW,IAA+C,IAAA,y3BAAA,YAAA,GAAA,EAAC,KAE3DC,EAAO,SAAS,cAAc,OAAO,EAC3C,QAAQ,IAAIA,CAAI,EAEhBA,EAAK,iBAAiB,SAAUC,CAAY,EAE5C,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,gBAAiB,SACjB,aAAc,IACd,eAAgB,GAChB,cAAe,GACf,UAAW,IACX,eAAgB,CAClB,CAAC,EAED,SAASF,EAAaG,EAAO,CAC3BA,EAAM,eAAc,EAEpBT,IAEA,MAAMd,EAAQmB,EAAK,SAAS,aAAa,EAAE,MAAM,OACjD,QAAQ,IAAInB,CAAK,EACZA,IAELgB,IAEAjB,EAAiBC,CAAK,EACnB,KAAK,CAAC,CAAE,KAAAwB,KAAW,CAClB,GAAIA,EAAK,SAAW,EAAG,CACrBC,EAAS,MAAM,CACb,QACE,2EACF,SAAU,WACV,gBAAiB,UACjB,aAAc,UACd,SAAU,MACV,QAASP,CACnB,CAAS,EACDD,IACA,MACD,CACDb,EAAU,UAAYC,EAAcmB,CAAI,EAExCH,EAAS,QAAO,CACtB,CAAK,EACA,MAAM,IAAM,CACXI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gDACT,gBAAiB,UACjB,aAAc,SACtB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbR,GACN,CAAK,EACHE,EAAK,MAAK,EACZ"}